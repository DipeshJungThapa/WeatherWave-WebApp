"""
Django settings for weatherwave_project project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import dj_database_url # Import for database configuration
from datetime import timedelta # NEW: Required for Knox token TTL if you use it

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-qqx7&d_57tmja@(l3!8%m5ljcf(n)$ti43l47%0hljqnulz%6!"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

AUTH_USER_MODEL = 'Login_Auth.CustomUser'

AUTHENTICATION_BACKENDS = ["django.contrib.auth.backends.ModelBackend"]

# Application definition

# backend/weatherwave_project/settings.py

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Third-party apps added for functionality (knox, rest_framework for API)
    "rest_framework",
    "knox",          # Added for authentication
    "corsheaders",   # Added for Cross-Origin Resource Sharing (CORS)

    # Your project apps
    "Login_Auth",    # Added
    "forecast",
    "favourite",     # Added
]

# NEW: Django REST Framework Settings - THIS IS THE CRITICAL ADDITION
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'knox.auth.TokenAuthentication', # This tells DRF to use Knox for authentication
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated', # Good default for APIs requiring auth
    ),
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser', # Ensure JSON is parsed correctly
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser'
    ),
}

# Optional: Knox settings (default token expiry is 10 hours)
# You can adjust this if you want tokens to expire sooner or later
REST_KNOX = {
    'TOKEN_TTL': timedelta(hours=24), # Example: tokens expire in 24 hours
    'AUTO_REFRESH': True, # Keep token alive if used frequently
}


LOGIN_URL = '/login/'


# MIDDLEWARE Configuration (CORS Middleware must be high up)
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware", # <-- ADDED THIS LINE FOR CORS
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "weatherwave_project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "weatherwave_project.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgres', # Your Supabase database name (usually 'postgres')
        'USER': 'postgres', # Your Supabase database user (usually 'postgres')
        'PASSWORD': '#WeatherWave2025', # Your ACTUAL Supabase database password
        'HOST': 'db.qgrkryybipeunbcvxukk.supabase.co', # Your Supabase project host
        'PORT': '5432', # Supabase PostgreSQL port
        'CONN_MAX_AGE': 600, # Optional: good practice for persistent connections
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# CORS settings (Frontend origins allowed to connect)
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    "http://localhost:5173",
    "http://127.0.0.1:5173",
]

# You can uncomment the line below for super quick testing, but it's less secure
# CORS_ALLOW_ALL_ORIGINS = True # Only for development, not production!